service: progimage

package:
  exclude:
    - coverage
    - tests

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, 'dev'}
  region: eu-west-2
  deploymentBucket:
    name: serverless-lambdas-deployments
  logRetentionInDays: 30
  profile: personal
  environment:
    DEBUG: ${file(./${self:provider.stage}.yml):DEBUG}
    stage: ${self:provider.stage}
    bucketName: progimage-${self:provider.stage}-uploads

  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 's3:Get*'
        - 's3:Put*'
      Resource: arn:aws:s3:::progimage-${self:provider.stage}-uploads/*

functions:
  ping:
    handler: src/handlers/ping.handle
    events:
      - http:
          path: /ping
          method: get
  upload:
    handler: src/handlers/upload.handle
    events:
      - http:
          path: /upload
          method: post
  retrieve:
    handler: src/handlers/retrieve.handle
    events:
      - http:
          path: /retrieve
          method: get
          contentHandling: CONVERT_TO_BINARY
plugins:
  - serverless-plugin-create-deployment-bucket
  - serverless-apigw-binary
  - serverless-apigwy-binary

resources:
  Resources:
    UploadBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: progimage-${self:provider.stage}-uploads

custom:
  apigwBinary:
    types:
      - '*/*'
